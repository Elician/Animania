buildscript {    repositories {        jcenter()        maven { url = "http://files.minecraftforge.net/maven" }    }    dependencies {        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'    }}apply plugin: 'net.minecraftforge.gradle.forge'ext.mcversion = project.mcversionext.animaniaversion = project.animaniaversionversion = "${mcversion}-${animaniaversion}"group= "com.animania"archivesBaseName = "animania"sourceCompatibility = targetCompatibility = "1.8"ext.addons = project.addons.split()ext.addonversions = project.addon_versions.split()ext.buildname = "${archivesBaseName}-${version}.jar"ext.basename = "${archivesBaseName}-base-${version}.jar"compileJava {    sourceCompatibility = targetCompatibility = "1.8"}minecraft {    version = project.forgeversion    runDir = "run"    mappings = project.mappings    makeObfSourceJar = false		replace 'GRADLE:VERSION', animaniaversion	replace "IS_DEV = true", "IS_DEV = false"		addons.eachWithIndex {element, i -> 		replace "GRADLE:${element}_version", "${addonversions[i]}"	}}repositories {   maven { //Maven for CraftStudioApi        name = "LeviathanStudio maven"        url = "https://maven.leviathan-studio.com/artifactory/leviathan/"   }    maven { //Maven for Waila       name 'ProfMobius maven'       url "http://mobiusstrip.eu/maven/"   }  	maven { //Maven for HWYLA       name 'Tehnut maven'       url "http://tehnut.info/maven/"   }   maven { //Maven for JEI    name = "Progwml6 maven"    url = "http://dvs1.progwml6.com/files/maven"   }  	maven { // TOP        name 'tterrag maven'        url "http://maven.tterrag.com/"    }		maven { // RedstoneFlux        name 'redstoneflux'        url "http://maven.covers1624.net/"    }		maven { // CodeChickenLib        name 'redstoneflux'        url "http://chickenbones.net/maven/"    }}dependencies {   compile 'com.leviathanstudio:CraftStudio:1.0.0.93-mc1.12-alpha:dev'   deobfCompile 'mcp.mobius.waila:Hwyla:1.8.22-B37_1.12'   deobfCompile 'mezz.jei:jei_1.12.2:4.8.0.119:api'   deobfCompile 'cofh:RedstoneFlux:1.12-2.1.0.6:deobf'   deobfCompile 'cofh:ThermalExpansion:1.12.2-5.5.2.39:deobf'   deobfCompile 'cofh:CoFHCore:1.12.2-4.6.1.22:deobf'   deobfCompile 'cofh:ThermalFoundation:1.12.2-2.6.3.27:deobf'   deobfCompile 'cofh:CoFHWorld:1.12.2-1.3.1.7:deobf'   deobfCompile 'codechicken:CodeChickenLib:1.12.2-3.2.3.357:deobf'   deobfCompile 'mcjty.theoneprobe:TheOneProbe-1.12:1.12-1.4.18-10'   //runtime 'mezz.jei:jei_1.12.2:4.8.0.119'}tasks.build.dependsOn("animaniaBuild")tasks.build.dependsOn("addonBuild")tasks.build.dependsOn("cleanup")task animaniaBuild(type: Jar, dependsOn: reobfJar) {	def buildLoc = "${project.buildDir}/libs/"	def fileLoc = buildLoc + buildname	appendix = "base"		from(zipTree(fileLoc).matching {		include "**/"		addons.each {			exclude "**/${it}/**" //Excluding addons		}		exclude "**/cofh/**"	})}task addonBuild(dependsOn: animaniaBuild) {	addons.eachWithIndex { element, i ->		def currentAddon = createAddon("${element}", buildname, i)		tasks.build.dependsOn(currentAddon)	}}task cleanup(type: Delete, dependsOn: addonBuild) {	def buildLoc = "${project.buildDir}/libs/"	def fileLoc = buildLoc + buildname	delete fileLoc} def createAddon(name, buildname, index) {	def buildLoc = "${project.buildDir}/libs/"	def fileLoc = buildLoc + buildname	return tasks.create("${name}Build", Jar) {			archiveName = "${archivesBaseName}-${name}-${mcversion}-${addonversions[index]}.jar"		includeEmptyDirs = false				from(zipTree(fileLoc).matching {			include "**/${name}/**"			include "com/animania/api/**"			exclude "**/cofh/**"		})	}}processResources {    inputs.property "version", animaniaversion    inputs.property "mcversion", mcversion    from(sourceSets.main.resources.srcDirs) {        include 'mcmod.info'        expand 'version':animaniaversion, 'mcversion':mcversion    }    from(sourceSets.main.resources.srcDirs) {        exclude 'mcmod.info'    }}
